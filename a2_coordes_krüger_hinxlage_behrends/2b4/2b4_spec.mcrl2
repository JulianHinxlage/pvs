sort
    CardinalDirection = struct north | east | south | west;
    Colour = struct red | yellow | green | none;

map
    next: Colour -> Colour;

eqn
	% Reihenfolge der Farben definieren
    next(none) = red;
    next(red) = green;
    next(green) = yellow;
    next(yellow) = red;

act
    show: CardinalDirection # Colour;
	% zur Synchronisierung der Aktiven Richtung
    changeActive;
    changePhase;
	% zur Synchronisierung der aktellen Farbe der Aktiven Richtung
    changeActiveAll;
    changePhaseBoth;

proc
    TrafficLight(d: CardinalDirection) =    
        (d == north || d == south)
			%TrafficLight wird mit none aufgerufen, falls north oder south dran sind
            -> TrafficLight(d, none)
			%sind east oder west dran wird erst changeActive aufgerufen und dann TrafficLight
            <> changeActive.TrafficLight(d, none);    


    TrafficLight(d : CardinalDirection,c : Colour) =
		% aktuelle Farbe anzeigen
        show(d, next(c)).( 
            (next(c) == red) 
				%ist die nächste Farbe rot, wird zweimal changeActive aufgerufen, um die Ampeln zu synchronisieren
                -> changeActive.changeActive.TrafficLight(d, next(c))     
				%ist die nächste Farbe nicht rot, wird nur die Phase geändert
                <> changePhase.TrafficLight(d, next(c))   
        );


    Crossing =
        hide(
            {	% Synchronisations Actionen verbergen
                changeActiveAll,
                changePhaseBoth
            },
        allow(
            {
				% keine Einzelnen Synchronisations Actionen erlauben
                show,
                changeActiveAll,
                changePhaseBoth
            },
        comm(
            {   %zur Synchronisation der Ampeln
				% alle Ampeln müssen gleichzeitig die Aktive Richtung ändern
                changeActive|changeActive|changeActive|changeActive -> changeActiveAll,
				% beide Ampeln der Aktiven Richtung müssen die Aktuelle Farbe Synchronisieren
                changePhase|changePhase -> changePhaseBoth 
            },
			%Ein Prozess für jede Himmelsrichtung
            TrafficLight(west) ||
            TrafficLight(south)||
            TrafficLight(east) ||
            TrafficLight(north)
        )));

init
    Crossing;
